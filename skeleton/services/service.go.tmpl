package services

import (
	"github.com/iancoleman/strcase"
	"google.golang.org/protobuf/types/known/fieldmaskpb"

	"{{ .Extra.pkgpath }}/repositories"
	pb "{{ .Extra.protopkg }}/gen/go/{{ .Extra.package }}/v1"
)

type {{ .Extra.servicename }}Service struct {
	pb.{{ .Extra.servicename }}ServiceServer
	repo repositories.Repository
}

func New{{ .Extra.servicename }}Service(repo repositories.Repository) *{{ .Extra.servicename }}Service {
	return &{{ .Extra.servicename }}Service{
		repo: repo,
	}
}

func CamelCaseFieldMask(mask *fieldmaskpb.FieldMask) {
	if mask == nil || mask.Paths == nil {
		return
	}

	var newPaths []string
	for _, path := range mask.Paths {
		lowerCasedParts := strings.Split(path, ".")
		var camelCasedParts []string
		for _, part := range lowerCasedParts {
			camelCasedParts = append(camelCasedParts, strcase.ToCamel(part))
		}
		newPaths = append(newPaths, strings.Join(camelCasedParts, "."))
	}

	mask.Paths = newPaths
}
